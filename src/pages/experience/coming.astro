---
import Layout from "../../layouts/Layout.astro";
import "../../styles/coming-map.css";
import {
  mapCategories,
  countryCategories,
  countryExplanations,
  stateCategories,
  stateExplanations,
  usaOverrideColor,
  DEFAULT_FILL_COLOR,
  DEFAULT_CATEGORY_ID
} from "../../data/mapDestinations";
import comingMapScript from "../../scripts/comingMap.ts?url";

const categoryColorById = Object.fromEntries(
  mapCategories.map((category) => [category.id, category.color] as const)
);

const categoryLabelById = Object.fromEntries(
  mapCategories.map((category) => [category.id, category.label] as const)
);

const countryColors: Record<string, string> = Object.fromEntries(
  Object.entries(countryCategories).map(([iso, categoryId]) => [
    iso,
    categoryColorById[categoryId] ?? DEFAULT_FILL_COLOR
  ])
);

if (usaOverrideColor) {
  countryColors.USA = usaOverrideColor;
}

const stateColors: Record<string, string> = Object.fromEntries(
  Object.entries(stateCategories).map(([state, categoryId]) => [
    state,
    categoryColorById[categoryId] ?? DEFAULT_FILL_COLOR
  ])
);

const serializedCountryColors = JSON.stringify(countryColors);
const serializedStateColors = JSON.stringify(stateColors);
const serializedCountryCategories = JSON.stringify(countryCategories);
const serializedStateCategories = JSON.stringify(stateCategories);
const serializedCategoryColors = JSON.stringify(categoryColorById);
const serializedCategoryLabels = JSON.stringify(categoryLabelById);
const serializedCountryExplanations = JSON.stringify(countryExplanations);
const serializedStateExplanations = JSON.stringify(stateExplanations);
const defaultFillColor = DEFAULT_FILL_COLOR;
const defaultCategoryId = DEFAULT_CATEGORY_ID;
const legendCategories = mapCategories.filter(
  (category) => category.showInLegend !== false
);
---

<Layout title="A venir" description="My goals and objectives.">
  <h1>À venir</h1>
  <p>
    Voici quelques objectifs et projets que je prévois de réaliser dans un avenir
    proche :
  </p>
  <ul>
    <li>Participer à un hackathon local</li>
    <li>Contribuer à un projet open-source</li>
    <li>Apprendre une nouvelle technologie (par exemple, Svelte ou Rust)</li>
  </ul>
  <p>
    J'ai également l'intention de travailler à l'étranger. Voilà une carte
    légendée du monde, indiquant les endroits où j'aimerais travailler.
  </p>

  <section class="map-section">
    <div class="map-header">
      <label for="colorFilter">Filtrer par catégorie :</label>
      <select id="colorFilter">
        <option value="__all__">Toutes</option>
        {mapCategories.map((category) => (
          <option value={category.id}>{category.label}</option>
        ))}
      </select>
    </div>

    <div
      id="map"
      class="map-container"
      aria-label="Carte du monde interactif montrant mes destinations potentielles"
      data-country-colors={serializedCountryColors}
      data-country-categories={serializedCountryCategories}
      data-country-explanations={serializedCountryExplanations}
      data-state-colors={serializedStateColors}
      data-state-categories={serializedStateCategories}
      data-state-explanations={serializedStateExplanations}
      data-category-colors={serializedCategoryColors}
      data-category-labels={serializedCategoryLabels}
      data-default-fill-color={defaultFillColor}
      data-default-category-id={defaultCategoryId}
    ></div>

    <div class="legend" aria-hidden="false">
      {legendCategories.map((category) => (
        <div class="legend-item">
          <span
            class="swatch"
            style={`background:${category.color};`}
          ></span>
          <span>{category.label}</span>
        </div>
      ))}
      <div class="legend-hint">Survolez une zone pour plus d'infos.</div>
    </div>

    <div id="hoverPopup" class="hover-popup" role="status" aria-live="polite"></div>
  </section>

  <link
    rel="stylesheet"
    href="https://unpkg.com/maplibre-gl@3.6.1/dist/maplibre-gl.css"
  />
  <script
    src="https://unpkg.com/maplibre-gl@3.6.1/dist/maplibre-gl.js"
    defer
  ></script>

  <script type="module" src={comingMapScript}></script>
</Layout>
